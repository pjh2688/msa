plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.senchaMsa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	/* 1. web( spring-boot-starter-web(스프링 웹 MVC), spring-boot-starter-tomcat(웹서버 톰캣) )*/
   	implementation 'org.springframework.boot:spring-boot-starter-web'
   	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
   
   	/* 2. lombok */
   	compileOnly 'org.projectlombok:lombok'
   	annotationProcessor 'org.projectlombok:lombok'
   
   	/* 3. JPA(spring-boot-starter-aop, spring-boot-starter-jdbc, hibernate, spring-data-jpa) */
   	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   
   	/* 4. MariaDB */
   	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' 
   
   	/* 5. thymeleaf */
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
   
   	/* 6. devtools. -> view 파일 재시작 안하고 새로고침으로도 수정내용 반영하고 싶을 때 추가, jsp랑은 다름. */
   	implementation 'org.springframework.boot:spring-boot-devtools'
   
   	/* 7. spring-boot-starter-test 
       	1) junit : 테스트 프레임워크, 스프링 부트 2.2부터는 junit5(jupiter)를 사용 -> 2.2이전에는 junit4(vintage)를 사용.
        2) mockito : 목 라이브러리.
        3) assertj : 테스트 코드를 좀 더 편하게 작성하게 도와주는 라이브러리 -> https://joel-costigliola.github.io/assertj/index.html
        4) spring-test : 스프링 통합 테스트 지원
    */
   	testImplementation 'org.springframework.boot:spring-boot-starter-test'

   	/* 8. 쿼리 파라미터 로그 남기기 (p6spy)-> application.properties에서 logging.level.org.hibernate.type=trace 부분 주석처리 */
   	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
   	
   	/* 9. validation */
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

test {
	useJUnitPlatform()
}
